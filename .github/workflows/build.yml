name: Build CI

on: [push, pull_request]

jobs:
  
  build-linux:
    runs-on: ubuntu-18.04
    
    strategy:
      fail-fast: false
      matrix:
        mach: ['i3le', 'ti3le', 'a6le', 'ta6le'] 

    env:
      MACH: ${{ matrix.mach }}

    steps:
      - uses: Bogdanp/setup-racket@v0.8
        with:
          distribution: 'minimal'  # minimal is enough
          variant: 'CS'            # lets dog-food CS
          version: 'current'
          packages: 'cs-bootstrap'
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Proceed with TARGET_MACHINE == ${{ matrix.mach }}
        run: echo $TARGET_MACHINE
      - name: Install libs for 32-bit
        if: matrix.mach == 'i3le' || matrix.mach == 'ti3le'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y gcc-multilib lib32ncurses5-dev libx32ncurses5-dev uuid-dev:i386 libssl-dev:i386
      - name: Install libs for 64-bit
        if: matrix.mach == 'a6le' || matrix.mach == 'ta6le'
        run: |
          sudo apt-get update
          sudo apt-get install -y libncurses5-dev uuid-dev libssl-dev
      - name: Build bootfiles
        run: racket -l cs-bootstrap
      - name: Build Chez
        run: .github/scripts/build.sh
      - name: Test Chez
        run: .github/scripts/test.sh

  build-arm64:
    runs-on: [self-hosted, ARM64, Linux]
    container: racket/racket-ci:latest
    
    env:
      MACH: tarm64le

    steps:
      - name: Checkout Racket
        uses: actions/checkout@v2
        with:
          repository: racket/racket
          fetch-depth: 100
      - name: Configuring Racket CGC
        working-directory: racket/racket/src
        run: >
          ./configure
          --prefix=/usr
          --enable-cgcdefault
          --disable-docs
      - name: Building Racket CGC
        working-directory: racket/racket/src
        run: |
          export cpus=$(nproc)
          make -l $cpus -j $((cpus+1))
      - name: Installing Racket CGC
        working-directory: racket/racket/src
        run: make -j  $((cpus+1)) install
      - name: Install cs-bootstrap
        run: raco pkg install --auto cs-bootstrap
      - name: Checkout ChezScheme
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 100
      - name: Build bootfiles
        run: racket -l cs-bootstrap
      - name: Build Chez
        run: |
          ./configure -m=$MACH
          make -j5 -l4
      - name: Test Chez
        run: .github/scripts/test.sh
